name: 'Docker Push'
description: 'Build and push a docker image'
inputs:
  github_token:
    description: 'GitHub Token'
    required: false
  dockerhub_user:
    description: 'DockerHub Username'
    required: true
  dockerhub_password:
    description: 'DockerHub Password'
    required: true
  image:
    description: 'Image Name'
    required: true
  context:
    description: 'Build Context'
    required: false
  build_args:
    description: 'Build Args'
    required: false
  dockerfile:
    description: 'Dockerfile'
    required: false
  tag_latest:
    description: 'Tag Latest'
    required: false
    default: auto
  registry:
    description: 'Registry'
    required: false
    default: github # or docker
  version:
    description: 'Version'
    required: false
  allow_vulnerabilities:
    description: 'Allow Vulnerabilities'
    required: false
    default: 'false'
  slack_webhook_url:
    description: 'Slack Webhook URL'
    required: false

outputs:
  version:
    description: "Image Version"
    value: ${{ steps.image.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: Generate Docker Tags
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.image }}
        flavor: latest=${{ inputs.tag_latest }}
        tags: |
          type=raw,value=${{ inputs.version }},enable=${{ (inputs.version && 'true') || 'false' }}
          type=edge,enable=${{ (inputs.version && 'false') || 'true' }}
          type=ref,event=pr,enable=${{ (inputs.version && 'false') || 'true' }}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
    - name: Configuration
      id: image
      shell: bash
      run: |
        echo "version=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}" >> $GITHUB_OUTPUT
    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry == 'docker' && '' || 'ghcr.io' }}
        username: ${{ inputs.registry == 'docker' && inputs.dockerhub_user || github.actor }}
        password: ${{ inputs.registry == 'docker' && inputs.dockerhub_password || inputs.github_token }}
    - name: Build and push to ${{ inputs.registry == 'docker' && 'DockerHub' || 'GitHub Container Registry' }}
      uses: docker/build-push-action@v5
      with:
        push: true
        context: ${{ inputs.context }}
        build-args: ${{ inputs.build_args }}
        file: ${{ inputs.dockerfile }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Check CVEs
      id: cves
      uses: docker/scout-action@v1
      continue-on-error: ${{ inputs.allow_vulnerabilities == 'true' }}
      with:
        debug: true
        verbose-debug: true
        command: cves,recommendations
        image: ${{ steps.meta.outputs.tags }}
        dockerhub-user: ${{ inputs.dockerhub_user }}
        dockerhub-password: ${{ inputs.dockerhub_password }}
        registry-user: ${{ inputs.registry == 'docker' && inputs.dockerhub_user || github.actor }}
        registry-password: ${{ inputs.registry == 'docker' && inputs.dockerhub_password || inputs.github_token }}
        to-latest: true
        ignore-base: true
        ignore-unchanged: true
        only-fixed: true
        write-comment: ${{ github.event_name == 'pull_request' }}
        github-token: ${{ inputs.github_token }}
        exit-code: ${{ inputs.allow_vulnerabilities != 'true' }}
    - name: Send notification to slack
      if: ${{ failure() && inputs.slack_webhook_url != '' }}
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "channel": "platform-automated",
            "username": "Github Actions",
            "icon_url": "https://avatars.githubusercontent.com/u/9919?s=200&v=4",
            "attachments": {
              "fallback": "${{ github.repository }} ${{ github.ref_name }} Failed the CVE check",
              "color": "danger",
              "fields": {
                "title": "${{ github.repository }} ${{ github.ref_name }} has vulnerabilities",
                "title_link": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                "value": "Please check the action logs for more details."
              }
            }
          }
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack_webhook_url }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
